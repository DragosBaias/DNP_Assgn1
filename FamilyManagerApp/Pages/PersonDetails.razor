@page "/Person/{id:int}/{Firstname}/{Lastname}"
@using Models
@using Data
@inject NavigationManager _navigationManager;
@inject IFamilyData _familyData;

<div class="container mt-6 mb-6 p-6 my-auto h-100 w-50">
    <div class="card p-4">
        <div class=" image d-flex flex-column justify-content-center align-items-center">
            <div class="d-flex flex-row justify-content-center mt-3">
            @if (_person.Sex.Equals("F")) {
                <button class="btn btn-secondary mt-3">
                    <img src="/Images/girl.jpg" height="100" width="100"/><br/>
                </button>
            }
            else {
                <button class="btn btn-secondary mt-3">
                    <img src="/Images/boy.png" height="100" width="100"/><br/>
                </button>
            }
            </div>
            <div>
                <span class="mt-3">@_person.FirstName @_person.LastName</span>
            </div>
            <div>
                <span class="mt-3">Age: @_person.Age</span>
            </div>
            <div class="d-flex flex-row justify-content-center align-items-center mt-3">
                <span class="idd1">Height: @_person.Height</span>
            </div>
            <div class="d-flex flex-row justify-content-center align-items-center mt-3">
                <span class="idd1">Weight: @_person.Weight</span>
            </div>
            <div class="d-flex flex-row justify-content-center align-items-center mt-3 w-25">
                Sex:
                <input type="checkbox" checked="@_person.Sex"/>
                <label>@_person.Sex</label><br/>
                @if (_person.Sex.Equals("F")) {
                    <input type="checkbox"/>
                    <label>M</label>
                }
                else {
                    <input type="checkbox"/>
                    <label>F</label>
                }
            </div>
            <div class="text mt-3">
                <span>Eye Color: @_person.EyeColor</span>
            </div>
            <div class="px-2 rounded mt-3">
                <span class="join">Hair Color: @_person.HairColor</span>
            </div>
            @if (_person is Adult) {
                Adult adult = (Adult) _person;
                <div class="px-2 rounded mt-3">
                    <span>Job title: @adult.JobTitle.JobTitle</span>
                </div>
            }
            @if (_person is Child) {
                Child child = (Child) _person;
                @if (child.Pets.Count != 0) {
                    <div class="px-2 rounded mt-3">
                        Pets:
                        @foreach (var pet in child.Pets) {
                            <span>@pet.Name</span>
                        }
                    </div>
                }
            }
        </div>
    </div>
</div>
@code {
    [Parameter]
    public int Id { set; get; }
    [Parameter]
    public string Firstname { set; get; }
    [Parameter]
    public string Lastname { set; get; }

    public string FirstLastName { get; set; }

    private Person _person;

    protected override async Task OnInitializedAsync() {
        _person = _familyData.GetPersonByIdFirstLastName(Id, Firstname,Lastname);
        FirstLastName = $"{Firstname} {Lastname}";
    }
    
}