@page "/statistics"
@page "/stats"
@attribute [Authorize]

@inject IFamilyData _model

@using Models
@using FamilyManagerApp.Data

<div class="card mb-5">
    <h1 class="card-header mb-3">Statistics</h1>
    <div class="card-body row">
        <div class="col-xl-3 col-md-12">
            <p>Total number of families: <strong>@_families.Count()</strong></p>
            <p>Total number of adults: <strong>@_people.Count(p => p is Adult)</strong></p>
            <p>Total number of children: <strong>@_people.Count(p => p is Child)</strong></p>
            <p>Total number of pets: <strong>@_families.Sum(f => f.Pets.Count())</strong></p>
        </div>
        <div class="col-xl-4 col-md-12">
            <p>Average number of people per family: <strong>@Math.Round(_families.Average(f => f.Adults.Count() + f.Children.Count()), 2)</strong></p>
            <p>Average number of adults per family: <strong>@Math.Round(_families.Average(f => f.Adults.Count()), 2)</strong></p>
            <p>Average number of children per family: <strong>@Math.Round(_families.Average(f => f.Children.Count()), 2)</strong></p>
            <p>Average number of pets per family: <strong>@Math.Round(_families.Average(f => f.Pets.Count() + f.Children.Sum(c => c.Pets.Count)), 2)</strong></p>
        </div>
        <div class="col-xl-5 col-md-12">
            <p>Total number of families with single parents: <strong>@_families.Count(f => f.Adults.Count() == 1)</strong></p>
            <p>Total number of people with the last name 'Mcclure': <strong>@_people.Count(p => p.LastName.Equals("Mcclure"))</strong></p>
            <p>Total number of teachers: <strong>@_people.Count(p => p is Adult adult && adult.JobTitle.JobTitle.Equals("Teacher"))</strong></p>
            <p>Total number of children with an interest in drawing: <strong>@_people.Count(p => p is Child child && child.Interests.Any(i => i.Type.Equals("Drawing")))</strong></p>
        </div>
    </div>
</div>


@code {
    private IList<Family> _families;
    private IList<Person> _people;
    
    protected override async Task OnInitializedAsync()
    {
        _families = _model.GetFamilies();
        _people = _model.GetPeople();
    }

}